version: "3.9"
secrets:
  mysecrets:
    file: ./.env
networks:
  social-net:
    external: true
services:
  postgres:
    restart: always
    image: postgres:latest
    networks:
      - social-net
    ports:
      - 5432:5432
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
    volumes:
      - ./imports/postgres-init.sh:/docker-entrypoint-initdb.d/init_db.sh
  keycloak:
    restart: always
    image: bitnami/keycloak:latest
#    volumes:
#      - ./imports:/opt/jboss/keycloak/imports
    networks:
      - social-net
   # command: bash /opt/jboss/keycloak/imports/keycloak-init.sh && /opt/jboss/tools/docker-entrypoint.sh -b 0.0.0.0 -Dkeycloak.profile.feature.upload_scripts=enabled
    ports:
      - 7001:8080
      - 7002:80
    environment:
      KC_IMPORT_ENABLED: "true"
      DB_VENDOR: POSTGRES
      DB_ADDR: postgres
      DB_DATABASE: keycloak
      DB_USER: postgres
      DB_PASSWORD: postgres
      KEYCLOAK_ADMIN: admin1
      KEYCLOAK_ADMIN_PASSWORD: admin1
  redis:
    restart: always
    image: redis:latest
    networks:
      - social-net
    ports:
      - 6379:6379
  config:
    restart: always
    image: config-api:1.0.0
    networks:
      - social-net
    ports:
      - 8081:8081
    environment:
      - SERVER_PORT=8081
      - GITHUB_USER=dimitrikvirik
      - GITHUB_TOKEN=${GITHUB_TOKEN_ENV}
    secrets:
      - mysecrets
  eureka:
    restart: always
    image: eureka-api:1.0.0
    networks:
      - social-net
    ports:
      - 8761:8761
    environment:
      - CONFIG_SERVER=http://config:8081
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - config
  gateway:
    restart: always
    image: gateway-api:1.0.0
    networks:
      - social-net
    ports:
      - 8080:8080
    environment:
      - CONFIG_SERVER=http://config:8081
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - eureka
  minio:
    restart: always
    image: minio/minio:latest
    ports:
      - 9000:9000
      - 9001:9001
    volumes:
      - minio_storage:/data
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minioPass
    command: server --console-address ":9001" /data
    networks:
      - social-net
  elasticsearch:
    restart: always
    image: elasticsearch:8.5.3
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms2g -Xmx2g"
    ports:
      - 9200:9200
    networks:
      - social-net
  kibana:
    restart: always
    container_name: kb-container
    image: kibana:8.5.3
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    networks:
      - social-net
    depends_on:
      - elasticsearch
    ports:
      - 5601:5601
  zookeeper:
    restart: always
    image: wurstmeister/zookeeper
    container_name: zookeeper_1
    networks:
      - social-net
    ports:
      - "2181:2181"
  kafka:
    restart: always
    image: wurstmeister/kafka
    container_name: kafka_1
    networks:
      - social-net
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 10.241.76.20
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  user:
    restart: always
    image: user-api:1.0.0
    networks:
      - social-net
    ports:
      - 8082:8082
    environment:
      - CONFIG_SERVER=http://config:8081
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - gateway
  payment:
    restart: always
    image: payment-api:1.0.0
    networks:
      - social-net
    ports:
      - 8083:8083
    environment:
      - CONFIG_SERVER=http://config:8081
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - gateway
  notification:
    restart: always
    image: notification-api:1.0.0
    networks:
      - social-net
    ports:
      - 8084:8084
    environment:
      - CONFIG_SERVER=http://config:8081
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - gateway
  feed:
    restart: always
    image: feed-api:1.0.0
    networks:
      - social-net
    ports:
      - 8085:8085
    environment:
      - CONFIG_SERVER=http://config:8081
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - gateway
volumes:
  minio_storage: { }
